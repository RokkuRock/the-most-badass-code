name: "CodeQL Manual Multi-Language"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '32 3 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual
          - language: csharp
            build-mode: manual
          - language: java-kotlin
            build-mode: manual
          - language: python
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup .NET (C#)
      - if: matrix.language == 'csharp'
        name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Setup Java (Java/Kotlin)
      - if: matrix.language == 'java-kotlin'
        name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Python
      - if: matrix.language == 'python'
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-extended,security-and-quality

      # 🔧 手動建置步驟：C/C++
      - if: matrix.language == 'c-cpp'
        name: Manual build for C/C++
        shell: bash
        run: |
          export CFLAGS="-g -O0 -fno-omit-frame-pointer -Wall -Wextra"
          export CXXFLAGS="-g -O0 -fno-omit-frame-pointer -Wall -Wextra"
          mkdir -p build && cd build
          find ../ -name '*.c' -exec gcc $CFLAGS -c {} \;
          find ../ -name '*.cpp' -exec g++ $CXXFLAGS -c {} \;

      # 🔧【修正後的手動建置步驟：C#】
      - if: matrix.language == 'csharp'
        name: Manual build for C#
        shell: bash
        run: |
          echo "📌 Manual build started for C#"
          dotnet restore
          dotnet build --configuration Release --no-restore
          echo "✅ Manual build completed for C#"

      # 🔧 手動建置步驟：Java/Kotlin
      - if: matrix.language == 'java-kotlin'
        name: Manual build for Java/Kotlin
        shell: bash
        run: |
          if [ -f "pom.xml" ]; then
            mvn clean compile -DskipTests || echo "Maven build warnings/errors"
          elif [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
            ./gradlew clean build -x test || echo "Gradle build warnings/errors"
          else
            find . -name '*.java' -exec javac {} \; || echo "Java compile warnings"
          fi

      # 🔧 Python dependency setup (因為不支援 manual 模式)
      - if: matrix.language == 'python'
        name: Setup Python dependencies
        shell: bash
        run: |
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt || echo "Dependency installation warnings"
          fi
          if [ -f "setup.py" ]; then
            pip install -e . || echo "Package installation warnings"
          fi
          python -m compileall . || echo "Python syntax check warnings"

      # Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "manual-scan-${{ matrix.language }}"
          upload: "always"
