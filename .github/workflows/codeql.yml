name: "CodeQL Advanced Multi-Language"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: '32 3 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: 120
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual
          - language: csharp
            build-mode: autobuild
          - language: java-kotlin
            build-mode: autobuild
          - language: python
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup .NET (C#)
      - if: matrix.language == 'csharp'
        name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Setup Java (Java/Kotlin)
      - if: matrix.language == 'java-kotlin'
        name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Python
      - if: matrix.language == 'python'
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-extended,security-and-quality

      # 🔧 手動建置 C/C++
      - if: matrix.language == 'c-cpp'
        name: Manual build for C/C++
        shell: bash
        run: |
          echo "Starting manual build for C/C++ analysis..."

          export CFLAGS="-g -O0 -fno-omit-frame-pointer -Wall -Wextra"
          export CXXFLAGS="-g -O0 -fno-omit-frame-pointer -Wall -Wextra"

          mkdir -p build && cd build

          # Compile all C files
          echo "Compiling C files..."
          find ../ -type f -name '*.c' | while read -r file; do
            gcc $CFLAGS -c "$file" -o "$(basename "$file" .c).o" || echo "Warning: Issue compiling $file"
          done

          # Compile all C++ files
          echo "Compiling C++ files..."
          find ../ -type f -name '*.cpp' | while read -r file; do
            g++ $CXXFLAGS -c "$file" -o "$(basename "$file" .cpp).o" || echo "Warning: Issue compiling $file"
          done

          echo "C/C++ manual build completed."

      # 🔧 C# 自動建置（dotnet）
      - if: matrix.language == 'csharp'
        name: Autobuild for C#
        uses: github/codeql-action/autobuild@v3

      # 🔧 Java/Kotlin 自動建置（Maven/Gradle）
      - if: matrix.language == 'java-kotlin'
        name: Autobuild for Java/Kotlin
        uses: github/codeql-action/autobuild@v3

      # 🔧 Python（非編譯語言，建議手動安裝依賴）
      - if: matrix.language == 'python'
        name: Setup Python dependencies
        shell: bash
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt || echo "Warning: Issue installing Python requirements"
          fi
          if [ -f setup.py ]; then
            pip install -e . || echo "Warning: Issue installing Python package"
          fi

      # 執行 CodeQL 分析
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "enhanced-scan-${{matrix.language}}"
          upload: "always"
